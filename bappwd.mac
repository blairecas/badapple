	.title	BAPPWD
	.mcall	.print .exit
	.enabl	LC

	.asect
	.=1000

C_SECTORS = 50.

Start:	; start PPU code
	call	PPSen				; allocate
	movb	#20, PPCmd
	mov 	#PpuStart, PPAcp
	call	PPSen				; write
	movb	#30, PPCmd
	call	PPSen				; run
	; wait for maybe return
	tst	PPComm
	bne	.-4
	movb	#2, PPCmd
	call	PPSen				; release mem
	; print error then
	.print	#MsgErr
	.exit

PPmsg:	.word	PPArr
        .word	177777
PPArr:	.byte	0
PPCmd:	.byte	1
PPDev:	.word	32
PPApp:	.word	0
PPAcp:	.word	End-PpuStart/2
PPLen:	.word	End-PpuStart/2

PPSen:	mov	#PPMsg, R2
	mov	#5, R3
	br	20$
10$:	movb	(R2)+, @#176676
20$:	tstb	@#176674
	bpl	20$
	sob	R3, 10$
	return

PPComm:	.word	177777
MsgErr:	.asciz	"Unable to find Bad Apple image on HDD (or read error occured)"
	.even

; //////////////////////////////////////////////////////////////////////////////
; // PPU code
; //////////////////////////////////////////////////////////////////////////////

PpuStart:
	mtps	#200
	; save mem reg, replace trap 4
	mov	@#177054, -(SP)
	mov	@#4, -(SP)
	mov	PC, R0
	add	#Int4-., R0
	mov	R0, @#4
	; test cartridges (TODO: normal IDE check, this is just presence of a cartridge test)
	movb	#^B00000010, @#177054		; bank #1, cassette #1
	call	CheckCart			; test write to IDE reg	
	beq	10$				; can write 
	movb	#^B00001010, @#177054		; bank #1, cassette #2
	call	CheckCart			; test write to IDE reg
	bne	90$				; nothing useful
10$:	; read sector 0
	mov	PC, R1
	add	#Buffer-., R1
	call	ReadSector
	inc	LbaLow
	call	CheckSign
	beq	StartDemo
	; skip all partitions
	mov	PC, R5
	add	#Buffer+2-., R5			; addr of partition sizes table
	mov	#24., R4			; 24. max partitions + one after them
20$:	add	(R5)+, LbaLow
	adc	LbaHigh
	sob	R4, 20$
	inc	LbaLow
	adc	LbaHigh
	call	CheckSign
	beq	StartDemo
90$:	; not found
	mov	(SP)+, @#4
	mov	(SP)+, @#177054
	mtps	#0	
	mov	#PPComm/2, @#177010
	clr	@#177014
	return

; demo is found, read 2 sectors to 1000 and go
StartDemo:
	mov	#1000, SP			; SP was at somewhere around 2000
	call	BlackScreen
	mov	LbaLow, R5			; LBA now at demo boot sector
	mov	LbaHigh, R4
	add	#C_SECTORS-1, R5		; LBA of demo data sector
	adc	R4
	; read 2 sectors of demo code
	inc	LbaLow
	adc	LbaHigh
	mov	#1000, R1
	call	ReadSector
	inc	LbaLow
	adc	LbaHigh
	mov	#2000, R1
	call	ReadSector
	; correct value of LBA for data and start
	mov	R4, @#1004			; demo data start high
	mov	R5, @#1002			; demo data start low
	bis	#^B1111100000, @#177054		; allow RAM on 120000+, timers off
	jmp	(SP)				; jump there

; trap4
Int4:	inc	(PC)+
Int4cn:	.word	0
	rti

; check IDE port with writing something there
CheckCart:
	clr	Int4cn
	mov	#^C1, @#110012
	tst	Int4cn
	return

; make screen black (lines table on 500)
BlackScreen:
	mov	#500, R0
	clr	(R0)+
	clr	(R0)+
	clr	(R0)+
	mov	#506, (R0)
	mov	#506, @#272
	return

; read sector and check signature of bad apple
CheckSign:
	mov	PC, R1
	add	#Buffer+1000-., R1
	mov	R1, -(SP)
	call	ReadSector
	mov	(SP)+, R0
	cmp	#240, (R0)+			; NOP
	bne	99$
	cmp	#476, (R0)+			; BR
	bne	99$
	cmp	#040502, (R0)+			; 'BA'
	bne	99$
	cmp	#050101, (R0)+			; 'AP'
99$:	return

; read sector from HDD
; addr - LbaHigh, LbaLow
; R1 - where to
ReadSector:
	mov	R5, -(SP)
	mov	R4, -(SP)
	; wait BSY
	tstb	@#110000
	bpl	.-4
	; issue command
	mov	#110016, R5			; 110016 data port addr
	mov	#110014, R4			; 110014 error code
	mov	#^C1, -(R4)			; 110012 read sectors count
	mov	LbaLow, R0
	com	R0
	mov	R0, -(R4)			; 110010 LBA low
	swab	R0
	mov	R0, -(R4)			; 110006 LBA med
	mov	LbaHigh, R0
	com	R0
	mov	R0, -(R4)			; 110004 LBA high
	mov	#^C340, -(R4)			; 110002 0xE0 master, LBA28
	mov	#^C40, -(R4)			; 110000 command 0x20 - read sectors
	; wait BSY
	tstb	(R4)
	bpl	.-2
	; not checking ERR, screw it
20$:	; wait DRDY + DRQ
	mov	(R4), R0
	bic	#^B1111111110110111, R0
	bne	20$
	; read sector
	mov	#400, R3
30$:	mov	(R5), (R1)+			; get data
	sob	R3, 30$
	mov	(SP)+, R4
	mov	(SP)+, R5
	return

LbaLow:		.word	0
LbaHigh:	.word	0
Buffer:		.blkw	1000			; 2 sectors

End:
	.end	Start
